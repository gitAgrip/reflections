How did viewing a diff between two versions of a file help you see the bug that was introduced?
Diff pinpointed all the lines that were changed so we diden't hva to look through redundant data.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
By reducing the time spent serching through saved copies of earlier versions.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros:
* Saves being logical changes
* Easy to go through changes to search for differences between versions

Cons:
* Need to remeber to save


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Google docs seem to be geared towards rich text editing, and git seem to be geared towards development. When you write code most often a logical change spans multiple files, while text documents in general are independent of other text documents.

How can you use the commands git log and git diff to view the history of files?

git log gives you a list of commits with id's. You can use git diff to compare the two id's to see identify the changes that where made inbetween.


How might using version control make you more confident to make changes that could break something?

It could make me more confident knowing its possible to go back. And knowing that i can see the differences to identify what code that broke the functionality.

Now that you have your workspace set up, what do you want to try using Git for?
Im going to apply vc to my development projects.
